<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ezyy.tms.map.mapper.MapAwayMapper" >
  <resultMap id="BaseResultMap" type="com.ezyy.tms.map.pojo.MapAway" >
    <id column="wayid" property="wayid" jdbcType="INTEGER" />
    <result column="origin" property="origin" jdbcType="VARCHAR" />
    <result column="destination" property="destination" jdbcType="VARCHAR" />
    <result column="duration" property="duration" jdbcType="INTEGER" />
    <result column="distance" property="distance" jdbcType="INTEGER" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="policy" property="policy" jdbcType="INTEGER" />
    <result column="credate" property="credate" jdbcType="TIMESTAMP" />
    <result column="stopflag" property="stopflag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    wayid, origin, destination, duration, distance, path, policy, credate, stopflag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.ezyy.tms.map.pojo.MapAwayExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from map_away
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from map_away
    where wayid = #{wayid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from map_away
    where wayid = #{wayid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.ezyy.tms.map.pojo.MapAwayExample" >
    delete from map_away
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.ezyy.tms.map.pojo.MapAway" >
    insert into map_away (wayid, origin, destination, 
      duration, distance, path, 
      policy, credate, stopflag
      )
    values (#{wayid,jdbcType=INTEGER}, #{origin,jdbcType=VARCHAR}, #{destination,jdbcType=VARCHAR}, 
      #{duration,jdbcType=INTEGER}, #{distance,jdbcType=INTEGER}, #{path,jdbcType=VARCHAR}, 
      #{policy,jdbcType=INTEGER}, #{credate,jdbcType=TIMESTAMP}, #{stopflag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.ezyy.tms.map.pojo.MapAway" >
    insert into map_away
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="wayid != null" >
        wayid,
      </if>
      <if test="origin != null" >
        origin,
      </if>
      <if test="destination != null" >
        destination,
      </if>
      <if test="duration != null" >
        duration,
      </if>
      <if test="distance != null" >
        distance,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="policy != null" >
        policy,
      </if>
      <if test="credate != null" >
        credate,
      </if>
      <if test="stopflag != null" >
        stopflag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="wayid != null" >
        #{wayid,jdbcType=INTEGER},
      </if>
      <if test="origin != null" >
        #{origin,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        #{destination,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        #{duration,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        #{distance,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="policy != null" >
        #{policy,jdbcType=INTEGER},
      </if>
      <if test="credate != null" >
        #{credate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopflag != null" >
        #{stopflag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.ezyy.tms.map.pojo.MapAwayExample" resultType="java.lang.Integer" >
    select count(*) from map_away
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update map_away
    <set >
      <if test="record.wayid != null" >
        wayid = #{record.wayid,jdbcType=INTEGER},
      </if>
      <if test="record.origin != null" >
        origin = #{record.origin,jdbcType=VARCHAR},
      </if>
      <if test="record.destination != null" >
        destination = #{record.destination,jdbcType=VARCHAR},
      </if>
      <if test="record.duration != null" >
        duration = #{record.duration,jdbcType=INTEGER},
      </if>
      <if test="record.distance != null" >
        distance = #{record.distance,jdbcType=INTEGER},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.policy != null" >
        policy = #{record.policy,jdbcType=INTEGER},
      </if>
      <if test="record.credate != null" >
        credate = #{record.credate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.stopflag != null" >
        stopflag = #{record.stopflag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update map_away
    set wayid = #{record.wayid,jdbcType=INTEGER},
      origin = #{record.origin,jdbcType=VARCHAR},
      destination = #{record.destination,jdbcType=VARCHAR},
      duration = #{record.duration,jdbcType=INTEGER},
      distance = #{record.distance,jdbcType=INTEGER},
      path = #{record.path,jdbcType=VARCHAR},
      policy = #{record.policy,jdbcType=INTEGER},
      credate = #{record.credate,jdbcType=TIMESTAMP},
      stopflag = #{record.stopflag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.ezyy.tms.map.pojo.MapAway" >
    update map_away
    <set >
      <if test="origin != null" >
        origin = #{origin,jdbcType=VARCHAR},
      </if>
      <if test="destination != null" >
        destination = #{destination,jdbcType=VARCHAR},
      </if>
      <if test="duration != null" >
        duration = #{duration,jdbcType=INTEGER},
      </if>
      <if test="distance != null" >
        distance = #{distance,jdbcType=INTEGER},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="policy != null" >
        policy = #{policy,jdbcType=INTEGER},
      </if>
      <if test="credate != null" >
        credate = #{credate,jdbcType=TIMESTAMP},
      </if>
      <if test="stopflag != null" >
        stopflag = #{stopflag,jdbcType=INTEGER},
      </if>
    </set>
    where wayid = #{wayid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.ezyy.tms.map.pojo.MapAway" >
    update map_away
    set origin = #{origin,jdbcType=VARCHAR},
      destination = #{destination,jdbcType=VARCHAR},
      duration = #{duration,jdbcType=INTEGER},
      distance = #{distance,jdbcType=INTEGER},
      path = #{path,jdbcType=VARCHAR},
      policy = #{policy,jdbcType=INTEGER},
      credate = #{credate,jdbcType=TIMESTAMP},
      stopflag = #{stopflag,jdbcType=INTEGER}
    where wayid = #{wayid,jdbcType=INTEGER}
  </update>
</mapper>